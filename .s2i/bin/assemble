#!/bin/bash

function rake_assets_precompile() {
  [[ "$DISABLE_ASSET_COMPILATION" == "true" ]] && return
  [ ! -f Gemfile ] && return
  [ ! -f Rakefile ] && return
  ! grep " rails " Gemfile.lock >/dev/null && return
  ! grep " execjs " Gemfile.lock >/dev/null && return
  ! bundle exec 'rake -T' | grep "assets:precompile" >/dev/null && return

  echo "---> Starting asset compilation ..."
  bundle exec rake assets:precompile
}

set -e

export RACK_ENV=${RACK_ENV:-"production"}
export RAILS_ENV=production
export RAILS_ROOT=/opt/app-root/src
export RAILS_HOST_NAME=localhost

if [ -n "$RUBYGEM_MIRROR" ]; then
  bundle config mirror.https://rubygems.org $RUBYGEM_MIRROR
fi

shopt -s dotglob
echo "---> Installing application source ..."
mv /tmp/src/* ./

# download basic hitobito core and generic wagon
git clone https://github.com/hitobito/hitobito.git /tmp/src/hitobito
git clone https://github.com/hitobito/hitobito_generic.git /tmp/src/hitobito_generic

mkdir -p ./vendor/wagons/

cp -a /tmp/src/hitobito/. ./
cp -a /tmp/src/hitobito_generic ./vendor/wagons/

chmod -R 777 ./log

echo "---> Building your Ruby application from source ..."
if [ -f Gemfile ]; then

  echo "---> Running 'bundle install --path vendor/bundle --clean --without development:test:metrics:console' ..."
  bundle install --path vendor/bundle --clean --without development:test:metrics:console

fi

if ! bundle exec rackup -h &>/dev/null; then
  echo "WARNING: Rubygem Rack is not installed in the present image."
  echo "         Add rack to your Gemfile in order to start the web server."
fi

if [[ "$RAILS_ENV" == "production" || "$RACK_ENV" == "production" ]]; then
  rake_assets_precompile
fi

# Fix source directory permissions
fix-permissions ./

# Make the ./tmp folder world writeable as Rails or other frameworks might use
# it to store temporary data (uploads/cache/sessions/etcd).
# The ./db folder has to be writeable as well because when Rails complete the
# migration it writes the schema version into ./db/schema.db
set +e
[[ -d ./tmp ]] && chgrp -R 0 ./tmp && chmod -R g+rw ./tmp
[[ -d ./db ]] && chgrp -R 0 ./db && chmod -R g+rw ./db
set -e
